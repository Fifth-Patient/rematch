(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{119:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=a.a.createContext({}),p=function(e){var t=a.a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),l=p(r),b=n,m=l["".concat(c,".").concat(b)]||l[b]||u[b]||o;return r?a.a.createElement(m,i(i({ref:t},d),{},{components:r})):a.a.createElement(m,i({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var d=2;d<o;d++)c[d]=r[d];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},73:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return p}));var n=r(3),a=r(7),o=(r(0),r(119)),c={id:"store",title:"Store",sidebar_label:"Store",slug:"/api-reference/store"},i={unversionedId:"api-reference/store",id:"api-reference/store",isDocsHomePage:!1,title:"Store",description:"Store returned by Rematch is essentially a Redux store with a few additional properties and extra features. Therefore, for more in-depth reference of the functions 'provided by Redux', refer to the Redux documentation.",source:"@site/../docs/api-reference/store.md",slug:"/api-reference/store",permalink:"/docs/api-reference/store",editUrl:"https://github.com/rematch/rematch/edit/main/docs/../docs/api-reference/store.md",version:"current",sidebar_label:"Store",sidebar:"docs",previous:{title:"Redux",permalink:"/docs/api-reference/redux"},next:{title:"Plugins",permalink:"/docs/api-reference/plugins"}},s=[{value:"Configuration",id:"configuration",children:[]},{value:"Dispatch actions directly from store",id:"dispatch-actions-directly-from-store",children:[]},{value:"Add dynamic models",id:"add-dynamic-models",children:[]}],d={toc:s};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},d,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Store returned by Rematch is essentially a ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://redux.js.org/api/store"}),"Redux store")," with a few additional properties and extra features. Therefore, for more in-depth reference of the functions '",Object(o.b)("em",{parentName:"p"},"provided by Redux"),"', refer to the Redux documentation."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"configuration"},"Configuration"),Object(o.b)("p",null,"Store is an object which contains the following properties:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"name")," (",Object(o.b)("em",{parentName:"p"},"string"),"): name of a store")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"addModel(namedModel)"),": it allows to lazy-load models and merge them into Rematch after ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api-reference#initconfig"}),"init")," has been called. ",Object(o.b)("strong",{parentName:"p"},"addModel")," accepts ",Object(o.b)("em",{parentName:"p"},"namedModel")," which means it needs to have parameter ",Object(o.b)("inlineCode",{parentName:"p"},"name")," defined (see example below).")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"getState()"),": provided by Redux, returns the state of your store.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"subscribe(listener: () => void): Unsubscribe"),": provided by Redux, adds a change listener.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"replaceReducer(nextReducer): void"),": provided by Redux, replaces the reducer currently used by the store to calculate the state.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"dispatch(action)"),": provided by Redux, a function that dispatches actions to the store. However, in Rematch ",Object(o.b)("strong",{parentName:"p"},"dispatch")," can be also used as an object which contains action dispatchers (see example below)."))),Object(o.b)("h3",{id:"dispatch-actions-directly-from-store"},"Dispatch actions directly from store"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"import store from './store'\n\n// dispatch reducers actions\nstore.dispatch({ type: 'count/increment', payload: 1 }) // regular dispatch usage\nstore.dispatch.count.increment(1) // the same as above but with action dispatcher\n\n// dispatch effects actions\nstore.dispatch({ type: 'count/incrementAsync', payload: 1 }) // regular dispatch usage\nstore.dispatch.count.incrementAsync(1) // the same as above but with action dispatcher\n")),Object(o.b)("h3",{id:"add-dynamic-models"},"Add dynamic models"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"import store from './store'\n// (1) initially\nstore.getState() // { count: 0 }\n// (2) add model\nstore.addModel({ name: 'countB', state: 99 })\n// (3) after adding\nstore.getState() // { count: 0, countB: 99 }\n")))}p.isMDXComponent=!0}}]);