(self.webpackChunkrematch_docs=self.webpackChunkrematch_docs||[]).push([[82],{3245:function(e,t,r){"use strict";var n=r(7378);t.Z=function(e){var t=e.children,r=e.hidden,a=e.className;return n.createElement("div",{role:"tabpanel",hidden:r,className:a},t)}},8287:function(e,t,r){"use strict";r.d(t,{Z:function(){return u}});var n=r(7378),a=r(1415),o=r(8944),l="tabItem_c0e5",s="tabItemActive_28AG";var i=37,c=39;var u=function(e){var t=e.lazy,r=e.block,u=e.defaultValue,p=e.values,m=e.groupId,d=e.className,h=(0,a.Z)(),f=h.tabGroupChoices,g=h.setTabGroupChoices,k=(0,n.useState)(u),b=k[0],y=k[1],v=n.Children.toArray(e.children),N=[];if(null!=m){var w=f[m];null!=w&&w!==b&&p.some((function(e){return e.value===w}))&&y(w)}var S=function(e){var t=e.currentTarget,r=N.indexOf(t),n=p[r].value;y(n),null!=m&&(g(m,n),setTimeout((function(){var e,r,n,a,o,l,i,c;(e=t.getBoundingClientRect(),r=e.top,n=e.left,a=e.bottom,o=e.right,l=window,i=l.innerHeight,c=l.innerWidth,r>=0&&o<=c&&a<=i&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},x=function(e){var t,r;switch(e.keyCode){case c:var n=N.indexOf(e.target)+1;r=N[n]||N[0];break;case i:var a=N.indexOf(e.target)-1;r=N[a]||N[N.length-1]}null==(t=r)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},d)},p.map((function(e){var t=e.value,r=e.label;return n.createElement("li",{role:"tab",tabIndex:b===t?0:-1,"aria-selected":b===t,className:(0,o.Z)("tabs__item",l,{"tabs__item--active":b===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:x,onFocus:S,onClick:S},r)}))),t?(0,n.cloneElement)(v.filter((function(e){return e.props.value===b}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==b})}))))}},1335:function(e,t,r){"use strict";var n=(0,r(7378).createContext)(void 0);t.Z=n},1415:function(e,t,r){"use strict";var n=r(7378),a=r(1335);t.Z=function(){var e=(0,n.useContext)(a.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},9121:function(e,t,r){"use strict";r.d(t,{Y:function(){return s}});var n=r(7378),a=r(8287),o=r(3245),l=[{label:"JavaScript",value:"js"},{label:"Typescript",value:"ts"}],s=function(e){var t=e.defaultValue,r=void 0===t?"js":t,s=e.values,i=void 0===s?l:s,c=e.children;return n.createElement(a.Z,{defaultValue:r,values:i},i.map((function(e,t){return n.createElement(o.Z,{key:e.value,value:e.value},c[t])})))}},8482:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var n=r(9603),a=r(120),o=(r(7378),r(5318)),l=r(8287),s=r(3245),i=r(9121),c={id:"select",title:"Select",sidebar_label:"@rematch/select",slug:"/plugins/select/"},u={unversionedId:"plugins/select",id:"plugins/select",isDocsHomePage:!1,title:"Select",description:"A plugin to add memoized state selection to Rematch. Selectors are created using Reselect by default and are automatically wired with selector dependencies from other models.",source:"@site/../docs/plugins/select.md",sourceDirName:"plugins",slug:"/plugins/select/",permalink:"/docs/plugins/select/",editUrl:"https://github.com/rematch/rematch/edit/main/docs/../docs/plugins/select.md",version:"current",sidebar_label:"@rematch/select",frontMatter:{id:"select",title:"Select",sidebar_label:"@rematch/select",slug:"/plugins/select/"},sidebar:"docs",previous:{title:"Immer",permalink:"/docs/plugins/immer/"},next:{title:"Loading",permalink:"/docs/plugins/loading/"}},p=[{value:"Compatibility",id:"compatibility",children:[]},{value:"Install",id:"install",children:[]},{value:"selectPlugin(config)",id:"selectpluginconfig",children:[]},{value:"Usage",id:"usage",children:[{value:"1. Add plugin",id:"1-add-plugin",children:[]},{value:"2. Add selectors",id:"2-add-selectors",children:[]},{value:"3. Selector Examples",id:"3-selector-examples",children:[]},{value:"4. Using Selectors In Your App",id:"4-using-selectors-in-your-app",children:[]}]},{value:"Recipes",id:"recipes",children:[{value:"Immutable.js",id:"immutablejs",children:[]},{value:"Re-reselect",id:"re-reselect",children:[]},{value:"Alternative to selecting",id:"alternative-to-selecting",children:[]}]}],m={toc:p};function d(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A plugin to add memoized state selection to Rematch. Selectors are created using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/reselect"},"Reselect")," by default and are automatically wired with selector dependencies from other models."),(0,o.kt)("h2",{id:"compatibility"},"Compatibility"),(0,o.kt)("p",null,"Install the correct version of select plugin based on the version of the core Rematch library in your project."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"center"},"@rematch/core"),(0,o.kt)("th",{parentName:"tr",align:"center"},"@rematch/select"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"1.x.x"),(0,o.kt)("td",{parentName:"tr",align:"center"},"2.x.x")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"2.x.x"),(0,o.kt)("td",{parentName:"tr",align:"center"},"3.x")))),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)(l.Z,{groupId:"npm2yarn",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @rematch/select\n"))),(0,o.kt)(s.Z,{value:"yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @rematch/select\n")))),(0,o.kt)("h2",{id:"selectpluginconfig"},"selectPlugin(","[config]",")"),(0,o.kt)("p",null,"The select plugin accepts one optional argument - ",(0,o.kt)("strong",{parentName:"p"},"config"),", which is an object with the following properties:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"[",(0,o.kt)("inlineCode",{parentName:"p"},"sliceState"),"]"," (",(0,o.kt)("em",{parentName:"p"},"(rootState, model) => modelState"),"): custom function for getting model's state based on the store's root state and the model object. The default function assumes your store is a plain JavaScript object. You might need to overwrite it in some cases, see the ",(0,o.kt)("a",{parentName:"p",href:"#immutablejs"},"plugin's recipes for an example"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"[",(0,o.kt)("inlineCode",{parentName:"p"},"selectorCreator"),"]"," (",(0,o.kt)("em",{parentName:"p"},"(selector, combiner) => outputSelector"),"): you can replace Reselect library with a different one by providing a custom function for creating selectors that has the same interface as Reselect. See the ",(0,o.kt)("a",{parentName:"p",href:"#re-reselect"},"plugin's recipes for an example"),"."))),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"1-add-plugin"},"1. Add plugin"),(0,o.kt)("p",null,"Start by adding the plugin to your store:"),(0,o.kt)(i.Y,{mdxType:"MultiLangComponent"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="store.js"',title:'"store.js"'},"import { init } from '@rematch/core'\nimport selectPlugin from '@rematch/select'\nimport * as models from './models'\n\ninit({\n  models,\n  // add selectPlugin to your store\n  plugins: [selectPlugin()],\n})\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="store.ts"',title:'"store.ts"'},"import selectPlugin from '@rematch/select'\nimport { init, RematchDispatch, RematchRootState } from '@rematch/core'\nimport { models, RootModel } from './models'\n\nexport const store = init<RootModel>({\n    models,\n    // add selectPlugin to your store\n    plugins: [selectPlugin()],\n})\n\nexport type Store = typeof store\nexport type Dispatch = RematchDispatch<RootModel>\nexport type RootState = RematchRootState<RootModel>\n\n"))),(0,o.kt)("h3",{id:"2-add-selectors"},"2. Add selectors"),(0,o.kt)("p",null,"Now add selectors to your models. A ",(0,o.kt)("strong",{parentName:"p"},'"selector"')," is a function that given the current ",(0,o.kt)("strong",{parentName:"p"},"root state")," and ",(0,o.kt)("strong",{parentName:"p"},"props")," returns some value:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"(rootState, props) => rootState.cart.reduce((total, item) => total + (item.price * item.amount), 0)\n")),(0,o.kt)("p",null," To make our applications fast, we actually want to create ",(0,o.kt)("strong",{parentName:"p"},'"memoized selectors"'),", which means they recalculate only when the data they are based on changes. The selector plugin exposes some functions to make this process easy."),(0,o.kt)("p",null,"Selectors can be added to a model using the ",(0,o.kt)("inlineCode",{parentName:"p"},"selectors")," property. It must be a function accepting the following arguments and returning selectors:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"slice")," - utility function that can be used in two different ways:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"(",(0,o.kt)("em",{parentName:"li"},"(modelState => value) => memoizedSelector"),"): it can accept as an argument a selector from current's model state. In this case it returns a memoized selector. It is basically a shortcut for creating simple memoized selectors."),(0,o.kt)("li",{parentName:"ul"},"(",(0,o.kt)("em",{parentName:"li"},"(rootState) => modelState"),"): if given a root state as an argument, it returns current's model state."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"createSelector")," - function for creating memoized selectors. By default, it's Reselect's ",(0,o.kt)("em",{parentName:"li"},"createSelector")," function. Refer to ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/reduxjs/reselect#createselectorinputselectors--inputselectors-resultfunc"},"Reselect documentation")," for details."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"hasProps")," - utility function which creates a new selector cache for each new set of ",(0,o.kt)("inlineCode",{parentName:"li"},"props"),". It wraps an entire selector factory and creates a higher-order selector. ",(0,o.kt)("a",{parentName:"li",href:"#re-reselect"},"For complex calculations or dashboards a recipe may be better"),".")),(0,o.kt)("p",null,"There are three more details to keep in mind:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Inside selectors, ",(0,o.kt)("inlineCode",{parentName:"li"},"this")," is bound to the current model's selectors."),(0,o.kt)("li",{parentName:"ul"},"Each selector accepts ",(0,o.kt)("inlineCode",{parentName:"li"},"models")," argument which allows accessing selectors from other models."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/reduxjs/reselect/blob/master/README.md#sharing-selectors-with-props-across-multiple-component-instances"},"Be careful when passing ",(0,o.kt)("inlineCode",{parentName:"a"},"props")," to a selector because of how reselect caches results."))),(0,o.kt)("h3",{id:"3-selector-examples"},"3. Selector Examples"),(0,o.kt)("p",null,"Let's look at the examples!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const model = {\n  name: 'cart',\n  state: [{\n    price: 42.00,\n    amount: 3,\n    productId: 2,\n  }],\n  selectors: (slice, createSelector, hasProps) => ({\n    // creates a simple memoized selector based on the cart state\n    total () {\n      return slice(cart =>\n        cart.reduce((a, b) => a + (b.price * b.amount), 0)\n      )\n    },\n    // uses createSelector method to create more complex memoized selector\n    totalWithShipping () {\n      return createSelector(\n        slice, // shortcut for (rootState) => rootState.cart\n        (rootState, props) => props.shipping,\n        (cart, shipping) => cart.reduce((a, b) => a + (b.price * b.amount), shipping)\n      )\n    },\n    // refers to the other selector from this model\n    doubleTotal () {\n      return createSelector(\n        this.totalWithShipping,\n        (totalWithShipping) => totalWithShipping * 2,\n      )\n    },\n    // accesses selector from a different model\n    productsPopularity (models) {\n      return createSelector(\n        slice, // shortcut for (rootState) => rootState.cart\n        models.popularity.pastDay, // gets 'pastDay' selector from 'popularity' model\n        (cart, hot) => cart.sort((a, b) => hot[a.productId] > hot[b.productId])\n      )\n    },\n    // uses hasProps function, which returns new selector for each given lowerLimit prop\n    expensiveFilter: hasProps(function (models, lowerLimit) {\n      return slice(items => items.filter(item => item.price > lowerLimit))\n    }),\n    // uses expensiveFilter selector to create a new selector where lowerLimit is set to 20.00\n    wouldGetFreeShipping () {\n      return this.expensiveFilter(20.00)\n    },\n  }),\n}\n")),(0,o.kt)("h3",{id:"4-using-selectors-in-your-app"},"4. Using Selectors In Your App"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@rematch/select")," adds a ",(0,o.kt)("inlineCode",{parentName:"p"},"select")," property to the store. It can be used in two ways:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"select( mapSelectToStructure: (select) => object)"))),(0,o.kt)("p",null,"When called as a function, ",(0,o.kt)("inlineCode",{parentName:"p"},"select")," lazily creates a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/reselect#createstructuredselectorinputselectors-selectorcreator--createselector"},"structuredSelector")," using the selectors you return in ",(0,o.kt)("inlineCode",{parentName:"p"},"mapSelectToStructure"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const selection = store.select(models => ({\n    total: models.cart.total,\n    eligibleItems: models.cart.wouldGetFreeShipping,\n}))\n\n// it can be used as 'mapStateToProps'\nconnect(selection)(MyComponent)\n// or\nconnect(state => ({\n    contacts: state.contacts.collection,\n    ...selection(state),\n}))(MyComponent)\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"select: { [modelName]: { [selectorName]: (state) => any } }"))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"select")," is also an object with a group of selectors for each of your store models. Selectors are regular functions that can be called anywhere within your application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const moreThan50 = store.select.cart.expensiveFilter(50.0)\n\nconsole.log(moreThan50(store.getState()))\n\nconst mapStateToProps = state => ({\n    items: moreThan50(state),\n})\n")),(0,o.kt)("h2",{id:"recipes"},"Recipes"),(0,o.kt)("h3",{id:"immutablejs"},"Immutable.js"),(0,o.kt)("p",null,"If you are using an ",(0,o.kt)("a",{parentName:"p",href:"https://facebook.github.io/immutable-js/"},"Immutable.js")," Map as your store, you will need to configure the plugin to slice the state using ",(0,o.kt)("a",{parentName:"p",href:"http://facebook.github.io/immutable-js/docs/#/Map/get"},"Map.get","(",")"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"selectorsPlugin({\n    sliceState: (rootState, model) => rootState.get(model.name),\n})\n")),(0,o.kt)("p",null,"Now you can use an ",(0,o.kt)("a",{parentName:"p",href:"http://facebook.github.io/immutable-js/docs/#/Map"},"Immutable.js Map")," as your store and access the appropriate slice of the state in each of your selectors."),(0,o.kt)("h3",{id:"re-reselect"},"Re-reselect"),(0,o.kt)("p",null,"When working on a dashboard or doing calculations with a lot of external values, you may find your selectors always re-run. This happens when your selector has props and then is shared between multiple components."),(0,o.kt)("p",null,"Selectors have a cache size of 1. Passing a different set of props will invalidate the cache. ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/toomuchdesign/re-reselect"},"re-reselect exists to solve this by caching your selectors by props as well"),"."),(0,o.kt)("p",null,"You can configure the plugin to use re-reselect:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import createCachedSelector from 're-reselect'\n\nselectorPlugin({\n    selectorCreator: createCachedSelector,\n})\n")),(0,o.kt)("h3",{id:"alternative-to-selecting"},"Alternative to selecting"),(0,o.kt)("p",null,"The reason we use selectors is because they are lazy. The biggest drawback is that they have to rely on other models' public lazy interfaces - ",(0,o.kt)("inlineCode",{parentName:"p"},"slice")," will only ever access the current model."),(0,o.kt)("p",null,"The actions fired by our store are another public interface that can eagerly track the changes to other models. Using a listener reducer might fit some applications better:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"reducers: {\n  'selectedGroup/change' (state, id) {\n    return {\n      ...state,\n      list: id\n        ? state.unfilteredList.filter.(p => p.group === id)\n        : state.unfilteredList\n    }\n  }\n}\n")))}d.isMDXComponent=!0},5318:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,h=m["".concat(i,".").concat(d)]||m[d]||p[d]||o;return r?n.createElement(h,l(l({ref:t},u),{},{components:r})):n.createElement(h,l({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8944:function(e,t,r){"use strict";function n(e){var t,r,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(r=n(e[t]))&&(a&&(a+=" "),a+=r);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,r=0,a="";r<arguments.length;)(e=arguments[r++])&&(t=n(e))&&(a&&(a+=" "),a+=t);return a}r.d(t,{Z:function(){return a}})}}]);